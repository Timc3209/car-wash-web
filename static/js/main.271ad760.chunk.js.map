{"version":3,"sources":["redux/reducers/authReducer.ts","redux/reducers/searchReducer.ts","redux/reducers/bookingReducer.ts","redux/reducers/index.ts","redux/store.ts","components/ProtectedRoute.tsx","test/data.ts","components/LocationAutocomplete.tsx","redux/actions/searchActions.ts","components/Header.tsx","redux/actions/authActions.ts","scenes/Landing.tsx","components/LabelInput.tsx","scenes/Login.tsx","components/Company.tsx","components/CompanyList.tsx","components/Spinner.tsx","scenes/Search.tsx","components/Vehicle.tsx","components/DateInput.tsx","components/TimeSelect.tsx","components/Package.tsx","components/Addon.tsx","scenes/Company.tsx","redux/actions/bookingActions.ts","scenes/Checkout.tsx","Router.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/images/company-default.jpg","redux/types/authTypes.ts","redux/types/searchTypes.ts","redux/types/bookingTypes.ts","redux/types/index.ts"],"names":["INITIAL_STATE","id","username","token","loggedIn","searching","address","name","companies","bookingCompany","undefined","bookingDate","Date","getTime","bookingTimeSlot","bookingType","bookingPackage","price","duration","lines","bookingAddons","bookingAddonIDs","bookingPrice","bookingDuration","rootReducer","combineReducers","auth","state","action","type","LOGIN_SUCCESS","payload","LOGOUT","search","SEARCH_SET","SEARCH_START","SEARCH_FAIL","SEARCH_SUCCESS","booking","SET_BOOKING_COMPANY","SET_BOOKING_DATE","SET_BOOKING_TIMESLOT","SET_BOOKING_TYPE","SET_BOOKING_TOTAL","SET_BOOKING_PACKAGE","ADD_BOOKING_ADDON","REMOVE_BOOKING_ADDON","filter","addon","RESET_BOOKING","persistConfig","key","storage","persistedReducer","persistReducer","middleware","composeWithDevTools","applyMiddleware","thunk","store","createStore","persistor","persistStore","ProtectedRoute","props","to","defaultPackages","truckPackages","defaultAddons","defaultTimeSlots","from","disabled","desc","street","city","zip","country","phone","email","packages","packagesTruck","addons","timeSlots","LocationAutocomplete","autocomplete","searchAddress","searchStart","searchSuccess","setVal","searchData","setTimeout","onAddressChanged","searchSet","landing","history","push","setAutocomplete","this","data-testid","placesRef","placeholder","className","options","appId","process","ALGOLIA_APP_ID","apiKey","ALGOLIA_APP_KEY","language","countries","aroundLatLng","aroundLatLngViaIP","onChange","suggestion","value","onLimit","console","log","onError","React","Component","mapDispatchToProps","ConnectedComponent","connect","withRouter","Header","logout","fixed","showSearch","page","Navbar","color","dark","expand","NavbarBrand","href","Nav","navbar","NavItem","NavLink","onClick","Landing","Container","Row","Col","Form","sm","md","lg","Button","size","block","LabelInput","label","errorMessage","FormGroup","Label","for","Input","invalid","FormFeedback","Login","password","errors","setPage","setState","clearError","setError","checkLogin","a","authData","loginSuccess","event","currentTarget","match","params","Company","Card","CardImg","top","width","src","defaultLogo","alt","CardBody","CardTitle","CardText","CompanyList","title","map","company","index","Fragment","Spinner","style","height","Search","Vehicle","icon","iconColor","selected","iconImport","truckPickup","carSide","Custom","rest","date","customInput","withPortal","SelectInput","onSelect","data","option","target","Package","clock","item","outline","Addon","ListGroupItem","tag","loadCompany","setBookingCompany","selectBookingDate","setBookingDate","selectBookingTimeSlot","timeSlot","setBookingTimeSlot","selectBookingType","setBookingType","selectBookingPackage","setBookingPackage","selectBookingAddon","bookingAddon","addBookingAddon","removeBookingAddon","includes","calcTotals","setBookingTotal","totalPrice","totalDuration","i","length","parseFloat","toFixed","componentDidUpdate","prevProps","login","checkout","currentPackages","xl","DateInput","TimeSelect","ListGroup","resetBooking","Checkout","Router","exact","path","component","App","loading","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.271ad760.chunk.js","sourcesContent":["import { LOGIN_SUCCESS, LOGOUT, AuthState, AuthActionTypes } from \"../types\";\n\nexport const INITIAL_STATE: AuthState = {\n  id: \"0\",\n  username: \"\",\n  token: \"\",\n  loggedIn: false,\n};\n\nexport const INITIAL_STATE_LOGGED: AuthState = {\n  id: \"demo\",\n  username: \"demo\",\n  token: \"demo\",\n  loggedIn: true,\n};\n\nexport function reducer(state = INITIAL_STATE, action: AuthActionTypes) {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        id: action.payload.id,\n        username: action.payload.username,\n        token: action.payload.token,\n        loggedIn: action.payload.loggedIn,\n      };\n    case LOGOUT:\n      return { ...INITIAL_STATE };\n    default:\n      return state;\n  }\n}\n","import {\n  SEARCH_SUCCESS,\n  SEARCH_SET,\n  SEARCH_START,\n  SEARCH_FAIL,\n  SearchState,\n  SearchActionTypes,\n} from \"../types\";\n\nexport const INITIAL_STATE: SearchState = {\n  searching: false,\n  address: { name: \"\", address: \"\" },\n  companies: [],\n};\n\nexport function reducer(state = INITIAL_STATE, action: SearchActionTypes) {\n  switch (action.type) {\n    case SEARCH_SET:\n      return {\n        ...state,\n        address: action.payload,\n      };\n    case SEARCH_START:\n      return {\n        ...state,\n        address: action.payload,\n        searching: true,\n      };\n    case SEARCH_FAIL:\n      return {\n        ...state,\n        address: action.payload,\n        searching: false,\n      };\n    case SEARCH_SUCCESS:\n      return {\n        ...state,\n        searching: action.payload.searching,\n        address: action.payload.address,\n        companies: action.payload.companies,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_BOOKING_COMPANY,\n  SET_BOOKING_DATE,\n  SET_BOOKING_TIMESLOT,\n  SET_BOOKING_TYPE,\n  SET_BOOKING_PACKAGE,\n  SET_BOOKING_TOTAL,\n  ADD_BOOKING_ADDON,\n  REMOVE_BOOKING_ADDON,\n  RESET_BOOKING,\n  AddonState,\n  BookingState,\n  BookingActionTypes,\n} from \"../types\";\n\nexport const INITIAL_STATE: BookingState = {\n  bookingCompany: undefined,\n  bookingDate: new Date().getTime(),\n  bookingTimeSlot: undefined,\n  bookingType: \"\",\n  bookingPackage: { id: \"\", name: \"\", price: 0, duration: 0, lines: [] },\n  bookingAddons: [],\n  bookingAddonIDs: [],\n  bookingPrice: 0,\n  bookingDuration: 0,\n};\n\nexport function reducer(state = INITIAL_STATE, action: BookingActionTypes) {\n  switch (action.type) {\n    case SET_BOOKING_COMPANY:\n      return {\n        ...INITIAL_STATE,\n        bookingCompany: action.payload,\n      };\n    case SET_BOOKING_DATE:\n      return {\n        ...state,\n        bookingDate: action.payload,\n        bookingTimeSlot: undefined,\n      };\n    case SET_BOOKING_TIMESLOT:\n      return {\n        ...state,\n        bookingTimeSlot: action.payload,\n      };\n    case SET_BOOKING_TYPE:\n      return {\n        ...state,\n        bookingType: action.payload,\n        bookingPackage: INITIAL_STATE.bookingPackage,\n      };\n    case SET_BOOKING_TOTAL:\n      return {\n        ...state,\n        bookingPrice: action.payload.price,\n        bookingDuration: action.payload.duration,\n      };\n    case SET_BOOKING_PACKAGE:\n      return {\n        ...state,\n        bookingPackage: action.payload,\n      };\n    case ADD_BOOKING_ADDON:\n      return {\n        ...state,\n        bookingAddons: [...state.bookingAddons, action.payload],\n        bookingAddonIDs: [...state.bookingAddonIDs, action.payload.id],\n      };\n    case REMOVE_BOOKING_ADDON:\n      return {\n        ...state,\n        bookingAddons: state.bookingAddons.filter(\n          (addon: AddonState) => addon.id !== action.payload.id\n        ),\n        bookingAddonIDs: state.bookingAddonIDs.filter(\n          (id: string) => id !== action.payload.id\n        ),\n      };\n    case RESET_BOOKING:\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport * as authReducer from \"./authReducer\";\nimport * as searchReducer from \"./searchReducer\";\nimport * as bookingReducer from \"./bookingReducer\";\nimport { AuthState, SearchState, BookingState } from \"../types\";\n\nexport interface AppState {\n  auth: AuthState;\n  search: SearchState;\n  booking: BookingState;\n}\n\nexport const AppInitialState: AppState = {\n  auth: authReducer.INITIAL_STATE,\n  search: searchReducer.INITIAL_STATE,\n  booking: bookingReducer.INITIAL_STATE,\n};\n\nexport const rootReducer = combineReducers({\n  auth: authReducer.reducer,\n  search: searchReducer.reducer,\n  booking: bookingReducer.reducer,\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport storage from \"redux-persist/lib/storage\";\nimport thunk from \"redux-thunk\";\nimport { AppState, rootReducer } from \"./reducers\";\n\nconst persistConfig = {\n  key: \"main\",\n  storage,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst persistedReducer = persistReducer<AppState, any>(\n  persistConfig,\n  rootReducer\n);\n\nconst middleware = composeWithDevTools(applyMiddleware(thunk));\nconst store = createStore(persistedReducer, middleware);\nconst persistor = persistStore(store);\n// persistor.purge();\nexport { store, persistor };\n","import React from \"react\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\n\ninterface Props extends RouteProps {\n  loggedIn: boolean;\n}\n\nconst ProtectedRoute = ({ loggedIn, ...props }: Props) =>\n  loggedIn ? <Route {...props} /> : <Redirect to=\"/\" />;\n\nexport default ProtectedRoute;\n","import {\n  CompanyState,\n  PackageState,\n  AddonState,\n  TimeSlotState,\n} from \"../redux/types\";\n\nexport const defaultPackages: Array<PackageState> = [\n  {\n    id: \"xac14768-ab4b-43d1-a18e-2fb12a75eae2\",\n    name: \"Ultimate\",\n    price: 49.99,\n    duration: 75,\n    lines: [\n      \"Exterior Hand Wash\",\n      \"Hand Dry\",\n      \"Wheel Shine\",\n      \"Hand Wax\",\n      \"Rain-X\",\n    ],\n  },\n  {\n    id: \"xbc14768-ab4b-43d1-a18e-2fb12a75eae2\",\n    name: \"Supreme\",\n    price: 39.99,\n    duration: 60,\n    lines: [\"Exterior Hand Wash\", \"Hand Dry\", \"Wheel Shine\", \"Hand Wax\"],\n  },\n  {\n    id: \"xcc14768-ab4b-43d1-a18e-2fb12a75eae2\",\n    name: \"Basic\",\n    price: 29.99,\n    duration: 45,\n    lines: [\"Exterior Hand Wash\", \"Hand Dry\", \"Wheel Shine\"],\n  },\n  {\n    id: \"xdc14768-ab4b-43d1-a18e-2fb12a75eae2\",\n    name: \"Deluxe\",\n    price: 19.99,\n    duration: 30,\n    lines: [\"Exterior Hand Wash\", \"Hand Dry\"],\n  },\n];\n\nexport const truckPackages: Array<PackageState> = [\n  {\n    id: \"xac14768-ab4b-43d1-a18a-2fb12a75eae2\",\n    name: \"Ultimate\",\n    price: 59.99,\n    duration: 90,\n    lines: [\n      \"Exterior Hand Wash\",\n      \"Hand Dry\",\n      \"Wheel Shine\",\n      \"Hand Wax\",\n      \"Rain-X\",\n    ],\n  },\n  {\n    id: \"xbc14768-ab4b-43d1-a18b-2fb12a75eae2\",\n    name: \"Supreme\",\n    price: 49.99,\n    duration: 75,\n    lines: [\"Exterior Hand Wash\", \"Hand Dry\", \"Wheel Shine\", \"Hand Wax\"],\n  },\n  {\n    id: \"xcc14768-ab4b-43d1-a18c-2fb12a75eae2\",\n    name: \"Basic\",\n    price: 39.99,\n    duration: 60,\n    lines: [\"Exterior Hand Wash\", \"Hand Dry\", \"Wheel Shine\"],\n  },\n  {\n    id: \"xdc14768-ab4b-43d1-a18d-2fb12a75eae2\",\n    name: \"Deluxe\",\n    price: 29.99,\n    duration: 45,\n    lines: [\"Exterior Hand Wash\", \"Hand Dry\"],\n  },\n];\n\nexport const defaultAddons: Array<AddonState> = [\n  {\n    id: \"xac14768-ab4b-43d1-a18e-2fb10a75eae2\",\n    name: \"Dashboard Conditioner\",\n    price: 9.99,\n    duration: 10,\n  },\n  {\n    id: \"xbc14768-ab4b-43d1-a18e-2f412a75eae2\",\n    name: \"Fragrance\",\n    price: 2.99,\n    duration: 5,\n  },\n];\n\nexport const defaultTimeSlots: Array<TimeSlotState> = [\n  {\n    id: \"hac14768-ab4b-43d1-a18e-2fb10a75eae2\",\n    name: \"8AM-10AM\",\n    from: \"8:00\",\n    to: \"10:00\",\n    disabled: false,\n    type: \"weekday\",\n  },\n  {\n    id: \"hbc14768-ab4b-43d1-a18e-2fb10a75eae2\",\n    name: \"10AM-12PM\",\n    from: \"10:00\",\n    to: \"12:00\",\n    disabled: false,\n    type: \"weekday\",\n  },\n];\n\nexport const companies: Array<CompanyState> = [\n  {\n    id: \"bcc14768-ab4b-43d1-a18e-2fb12a75eae2\",\n    name: \"Dream Wash\",\n    desc:\n      \"The Dream Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@dreamwash.com\",\n    packages: defaultPackages,\n    packagesTruck: truckPackages,\n    addons: defaultAddons,\n    timeSlots: defaultTimeSlots,\n  },\n  {\n    id: \"c1a673cf-f667-4c08-a909-a5b3b51addc8\",\n    name: \"Jet Wash\",\n    desc:\n      \"The Jet Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@jetwash.com\",\n    packages: defaultPackages,\n    packagesTruck: truckPackages,\n    addons: defaultAddons,\n    timeSlots: defaultTimeSlots,\n  },\n  {\n    id: \"46e186dd-69b8-49bc-8a9f-93f353279e3d\",\n    name: \"Fast Wash\",\n    desc:\n      \"The Fast Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@fastwash.com\",\n    packages: defaultPackages,\n    packagesTruck: truckPackages,\n    addons: defaultAddons,\n    timeSlots: defaultTimeSlots,\n  },\n  {\n    id: \"16e186dd-69b8-49bc-8a9f-93f353279e3d\",\n    name: \"New Dream Wash\",\n    desc:\n      \"The New Dream Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@dreamwash.com\",\n    packages: defaultPackages,\n    packagesTruck: truckPackages,\n    addons: defaultAddons,\n    timeSlots: defaultTimeSlots,\n  },\n  {\n    id: \"26e186dd-69b8-49bc-8a9f-93f353279e3d\",\n    name: \"New Jet Wash\",\n    desc:\n      \"The New Jet Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@jetwash.com\",\n    packages: defaultPackages,\n    packagesTruck: truckPackages,\n    addons: defaultAddons,\n    timeSlots: defaultTimeSlots,\n  },\n  {\n    id: \"36e186dd-69b8-49bc-8a9f-93f353279e3d\",\n    name: \"New Fast Wash\",\n    desc:\n      \"The New Fast Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@fastwash.com\",\n    packages: defaultPackages,\n    packagesTruck: truckPackages,\n    addons: defaultAddons,\n    timeSlots: defaultTimeSlots,\n  },\n];\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport AlgoliaPlaces from \"algolia-places-react\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { searchSet, searchStart, searchSuccess } from \"../redux/actions\";\nimport { LocationState } from \"../redux/types\";\nimport { AppState } from \"../redux/reducers\";\nimport { companies } from \"../test/data\";\n\ninterface Props extends RouteComponentProps {\n  searchSuccess: typeof searchSuccess;\n  searchStart: typeof searchStart;\n  searchSet: typeof searchSet;\n  address: LocationState;\n  landing: boolean;\n}\n\ninterface OnChangeProps {\n  query: string;\n  suggestion: { name: string; value: string };\n}\n\ninterface Autocomplete extends React.RefObject<HTMLInputElement> {\n  setVal: (name: string) => void;\n}\n\nclass LocationAutocomplete extends React.Component<Props> {\n  private autocomplete: Autocomplete | undefined = undefined;\n\n  componentDidMount() {\n    const { landing, address } = this.props;\n\n    if (landing === false) {\n      this.searchAddress(address);\n    }\n  }\n\n  searchAddress = (address: LocationState) => {\n    const { searchStart, searchSuccess } = this.props;\n\n    if (this.autocomplete) {\n      this.autocomplete.setVal(address.name);\n    }\n\n    const searchData = { address, companies, searching: false };\n    searchStart(address);\n    setTimeout(() => searchSuccess(searchData), 250);\n  };\n\n  onAddressChanged = (address: LocationState) => {\n    const { searchSet, landing, history } = this.props;\n\n    if (landing === false) {\n      this.searchAddress(address);\n      return;\n    }\n    searchSet(address);\n    history.push(\"/search/\");\n  };\n\n  setAutocomplete = (autocomplete: Autocomplete) => {\n    this.autocomplete = autocomplete;\n  };\n\n  render() {\n    const { landing } = this.props;\n    return (\n      <AlgoliaPlaces\n        data-testid={\"location-autocomplete\"}\n        placesRef={this.setAutocomplete}\n        placeholder={\"Enter address\"}\n        className={landing ? \"form-control-lg form-control\" : \"form-control\"}\n        options={{\n          appId: process.env.ALGOLIA_APP_ID,\n          apiKey: process.env.ALGOLIA_APP_KEY,\n          language: \"en\",\n          countries: [\"us\"],\n          aroundLatLng: \"29.5652,-98.3364\",\n          aroundLatLngViaIP: false,\n          type: \"address\",\n        }}\n        onChange={({ suggestion }: OnChangeProps) =>\n          this.onAddressChanged({\n            name: suggestion.name,\n            address: suggestion.value,\n          })\n        }\n        onLimit={() =>\n          console.log(\"Fired when you reached your current rate limit.\")\n        }\n        onError={() =>\n          console.log(\n            \"Fired when we could not make the request to Algolia Places servers for any reason but reaching your rate limit.\"\n          )\n        }\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ search }: AppState) => {\n  const { address } = search;\n  return { address };\n};\n\nconst mapDispatchToProps = {\n  searchSuccess,\n  searchSet,\n  searchStart,\n};\n\nconst ConnectedComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LocationAutocomplete);\n\nexport default withRouter(ConnectedComponent);\n","import {\n  SEARCH_SUCCESS,\n  SEARCH_SET,\n  SEARCH_START,\n  SEARCH_FAIL,\n  SearchState,\n  LocationState,\n} from \"../types\";\n\nexport const searchSuccess = (payload: SearchState) => {\n  return {\n    type: SEARCH_SUCCESS,\n    payload,\n  };\n};\n\nexport const searchSet = (payload: LocationState) => {\n  return {\n    type: SEARCH_SET,\n    payload,\n  };\n};\n\nexport const searchStart = (payload: LocationState) => {\n  return {\n    type: SEARCH_START,\n    payload,\n  };\n};\n\nexport const searchFail = (payload: LocationState) => {\n  return {\n    type: SEARCH_FAIL,\n    payload,\n  };\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\nimport LocationAutocomplete from \"./LocationAutocomplete\";\nimport { logout } from \"../redux/actions\";\nimport { AppState } from \"../redux/reducers\";\n\ninterface Props {\n  fixed?: string;\n  showSearch: boolean;\n  page: string;\n  loggedIn: boolean;\n  logout: typeof logout;\n}\n\nclass Header extends React.Component<Props> {\n  logout = () => {\n    const { logout } = this.props;\n    logout();\n  };\n\n  render() {\n    const { fixed, showSearch, page, loggedIn } = this.props;\n    return (\n      <div className=\"header-container\">\n        <Navbar color=\"dark\" dark expand=\"md\" fixed={fixed}>\n          <NavbarBrand href=\"#\">Car Wash</NavbarBrand>\n          {showSearch && (\n            <div className=\"navbar-search desktop-only\">\n              <LocationAutocomplete landing={false} />\n            </div>\n          )}\n          <div className=\"navbar-right\">\n            <Nav navbar>\n              <NavItem>\n                {loggedIn ? (\n                  <NavLink\n                    href={`#`}\n                    onClick={this.logout}\n                    className=\"nav-link\"\n                  >\n                    Log out\n                  </NavLink>\n                ) : (\n                  <NavLink href={`#login${page}`} className=\"nav-link\">\n                    Sign in\n                  </NavLink>\n                )}\n              </NavItem>\n            </Nav>\n          </div>\n        </Navbar>\n        {showSearch && (\n          <div className=\"navbar-search-mobile mobile-only\">\n            <LocationAutocomplete landing={false} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: AppState) => {\n  const { loggedIn } = auth;\n  return { loggedIn };\n};\n\nconst mapDispatchToProps = {\n  logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import { LOGIN_SUCCESS, LOGOUT, AuthState } from \"../types\";\n\nexport const loginSuccess = (payload: AuthState) => {\n  return {\n    type: LOGIN_SUCCESS,\n    payload,\n  };\n};\n\nexport const logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n","import React from \"react\";\nimport { Container, Row, Col, Form, Button } from \"reactstrap\";\nimport Header from \"../components/Header\";\nimport LocationAutocomplete from \"../components/LocationAutocomplete\";\n\nclass Landing extends React.Component<{}> {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header fixed=\"top\" showSearch={false} page=\"/\" />\n        <main className=\"landing-background\">\n          <div className=\"overlay\"></div>\n          <Container>\n            <Row>\n              <Col>\n                <h1 className=\"mb-5 text-white\">\n                  Where do you want to wash your car?\n                </h1>\n              </Col>\n            </Row>\n            <Form>\n              <Row>\n                <Col sm=\"12\" md=\"8\" lg=\"9\" className=\"mb-4\">\n                  <LocationAutocomplete landing={true} />\n                </Col>\n                <Col sm=\"12\" md=\"4\" lg=\"3\">\n                  <Button color=\"primary\" size=\"lg\" block>\n                    Book Your Wash\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { FormGroup, FormFeedback, Label, Input, InputProps } from \"reactstrap\";\n\nconst LabelInput = ({\n  id,\n  name,\n  value,\n  type,\n  label,\n  placeholder,\n  onChange,\n  errorMessage,\n}: InputProps) => (\n  <FormGroup>\n    <Label for={id}>{label}</Label>\n    <Input\n      type={type}\n      name={name}\n      value={value}\n      id={id}\n      placeholder={placeholder}\n      invalid={errorMessage !== \"\"}\n      onChange={onChange}\n    />\n    <FormFeedback>{errorMessage}</FormFeedback>\n  </FormGroup>\n);\n\nexport default LabelInput;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { Button, Form } from \"reactstrap\";\nimport { AuthState } from \"../redux/types\";\nimport { loginSuccess } from \"../redux/actions\";\nimport { AppState } from \"../redux/reducers\";\nimport LabelInput from \"../components/LabelInput\";\n\ntype MatchProps = {\n  page: string;\n  id: string;\n};\n\ninterface Props extends RouteComponentProps<MatchProps> {\n  loggedIn: boolean;\n  loginSuccess: typeof loginSuccess;\n}\n\ninterface ErrorField {\n  email: string;\n  password: string;\n}\n\ninterface States {\n  email: string;\n  password: string;\n  page: string;\n  id: string;\n  errors: ErrorField;\n}\n\nclass Login extends React.Component<Props, States> {\n  readonly state: States = {\n    email: \"demo@gmail.com\",\n    password: \"demo\",\n    page: \"\",\n    id: \"\",\n    errors: {\n      email: \"\",\n      password: \"\",\n    },\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const { page, id } = match.params;\n\n    if (page) {\n      this.setPage(page, id);\n    }\n  }\n\n  setPage = (page: string, id: string) => {\n    id = id === undefined ? \"\" : id;\n    this.setState({ page, id });\n  };\n\n  clearError = (name: keyof ErrorField) => {\n    const { errors } = this.state;\n    errors[name] = \"\";\n    this.setState({ errors });\n  };\n\n  setError = (name: keyof ErrorField, value: string) => {\n    const { errors } = this.state;\n    errors[name] = value;\n    this.setState({ errors });\n  };\n\n  checkLogin = async () => {\n    const { history } = this.props;\n    const { email, password, page, id } = this.state;\n\n    if (email === \"\") {\n      this.setError(\"email\", \"Please enter a valid email\");\n      return false;\n    }\n    if (password === \"\") {\n      this.setError(\"password\", \"Invalid email or password\");\n      return false;\n    }\n\n    if (email === \"demo@gmail.com\" && password === \"demo\") {\n      const authData: AuthState = {\n        id: \"demo\",\n        username: \"demo\",\n        token: \"demo\",\n        loggedIn: true,\n      };\n      this.props.loginSuccess(authData);\n\n      if (page === \"\") {\n        history.push(\"/\");\n      } else if (id === \"\") {\n        history.push(`/${page}/`);\n      } else {\n        history.push(`/${page}/${id}`);\n      }\n      return true;\n    }\n\n    this.setError(\"password\", \"Invalid email or password\");\n  };\n\n  onChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const key = event.currentTarget.name;\n    const value = event.currentTarget.value;\n    this.setState<never>({ [key]: value, errors: { email: \"\", password: \"\" } });\n  };\n\n  render() {\n    const { email, password, errors } = this.state;\n    return (\n      <div className=\"login-container\">\n        <h1 className=\"login-header text-center\">Car Wash</h1>\n        <h4 className=\"pb-2\">Welcome Back</h4>\n        <Form className=\"login-form\">\n          <LabelInput\n            name=\"email\"\n            label=\"Email\"\n            type=\"text\"\n            value={email}\n            onChange={this.onChange}\n            errorMessage={errors.email}\n          />\n          <LabelInput\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            value={password}\n            onChange={this.onChange}\n            errorMessage={errors.password}\n          />\n          <Button\n            className=\"btn-lg btn-dark btn-block mt-4\"\n            onClick={this.checkLogin}\n          >\n            Login\n          </Button>\n        </Form>\n        <div className=\"signup-container pt-3 text-center\">\n          <p>\n            New to Car Wash? <a href=\"#login\">Create Account</a>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: AppState) => {\n  const { loggedIn } = auth;\n  return { loggedIn };\n};\n\nconst mapDispatchToProps = {\n  loginSuccess,\n};\n\nconst ConnectedComponent = connect(mapStateToProps, mapDispatchToProps)(Login);\n\nexport default withRouter(ConnectedComponent);\n","import React from \"react\";\nimport { Card, CardBody, CardTitle, CardImg, CardText } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { CompanyState } from \"../redux/types\";\nimport defaultLogo from \"../assets/images/company-default.jpg\";\n\nconst Company = ({ id, name, desc }: CompanyState) => (\n  <Link to={`/company/${id}`} className=\"company-card\">\n    <Card className=\"box-shadow mt-2 mb-2\">\n      <CardImg top width=\"100%\" src={defaultLogo} alt={name} />\n      <CardBody>\n        <CardTitle>\n          <h4>{name}</h4>\n        </CardTitle>\n        <CardText>{desc}</CardText>\n      </CardBody>\n    </Card>\n  </Link>\n);\n\nexport default Company;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Company from \"./Company\";\nimport { CompanyState } from \"../redux/types\";\n\ninterface Props {\n  title: string;\n  companies: Array<CompanyState>;\n}\n\nexport default class CompanyList extends React.Component<Props> {\n  render() {\n    const { title, companies } = this.props;\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h1 className=\"mt-4 mb-4\">{title}</h1>\n          </Col>\n        </Row>\n        <Row>\n          {companies.map((company: CompanyState, index: number) => (\n            <React.Fragment key={index}>\n              {index % 3 === 0 && index !== 0 && <div className=\"w-100\"></div>}\n              <Col sm=\"12\" lg=\"4\">\n                <Company\n                  id={company.id}\n                  name={company.name}\n                  desc={company.desc}\n                  street={company.street}\n                  city={company.city}\n                  state={company.state}\n                  zip={company.zip}\n                  country={company.country}\n                  phone={company.phone}\n                  email={company.email}\n                  packages={company.packages}\n                  packagesTruck={company.packagesTruck}\n                  addons={company.addons}\n                  timeSlots={company.timeSlots}\n                />\n              </Col>\n            </React.Fragment>\n          ))}\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport { Spinner as ReactstrapSpinner } from \"reactstrap\";\n\nexport default class Spinner extends React.Component<{}> {\n  render() {\n    return (\n      <div className=\"spinner-container\">\n        <ReactstrapSpinner style={{ width: \"3rem\", height: \"3rem\" }} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../redux/reducers\";\nimport { CompanyState } from \"../redux/types\";\nimport Header from \"../components/Header\";\nimport CompanyList from \"../components/CompanyList\";\nimport Spinner from \"../components/Spinner\";\n\ninterface Props {\n  address: string;\n  searching: boolean;\n  companies: Array<CompanyState>;\n}\n\nclass Search extends React.Component<Props> {\n  render() {\n    const { searching, companies } = this.props;\n    return (\n      <div className=\"App\">\n        <Header showSearch={true} page=\"/search\" />\n        {searching ? (\n          <Spinner />\n        ) : (\n          <CompanyList title=\"Local Results\" companies={companies} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ search }: AppState) => {\n  const { address, searching, companies } = search;\n  return { address, searching, companies };\n};\n\nexport default connect(mapStateToProps, undefined)(Search);\n","import React from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport carSide from \"@iconify/icons-fa-solid/car-side\";\nimport truckPickup from \"@iconify/icons-fa-solid/truck-pickup\";\n\ninterface Props {\n  name: string;\n  icon: string;\n  iconColor: string;\n  selected: boolean;\n  onClick: () => void;\n}\n\nconst Vehicle = ({ name, icon, iconColor, selected, onClick }: Props) => {\n  let iconImport = truckPickup;\n\n  switch (icon) {\n    case \"car\":\n      iconImport = carSide;\n      break;\n    case \"truck\":\n      iconImport = truckPickup;\n      break;\n    default:\n      iconImport = truckPickup;\n      break;\n  }\n\n  return (\n    <div\n      className={`vehicle-row ${selected ? `bg-primary` : `bg-white`}`}\n      onClick={onClick}\n      data-testid={`vehicle-${icon}`}\n    >\n      <Icon icon={iconImport} width={\"1.7em\"} color={iconColor} />\n      <span className={`vehicle-text ${selected ? `text-white` : `text-dark`}`}>\n        {name}\n      </span>\n    </div>\n  );\n};\n\nexport default Vehicle;\n","import React from \"react\";\nimport { FormGroup, Input, Label, FormFeedback, InputProps } from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\n\ninterface Props {\n  label: string;\n  date: number;\n  onChange: (date: number) => void;\n  errorMessage?: string;\n}\n\nconst Custom = ({ value, onClick, invalid, ...rest }: InputProps) => {\n  return <Input value={value} onClick={onClick} invalid={invalid} {...rest} />;\n};\n\nconst LabelInput = ({ label, date, onChange, errorMessage }: Props) => (\n  <FormGroup>\n    {label !== \"\" && <Label for=\"exampleEmail\">{label}</Label>}\n    <DatePicker\n      selected={new Date(date)}\n      onChange={(date: Date) =>\n        onChange(date ? date.getTime() : new Date().getTime())\n      }\n      customInput={<Custom invalid={errorMessage !== \"\"} />}\n      withPortal={true}\n    />\n    <FormFeedback>{errorMessage}</FormFeedback>\n  </FormGroup>\n);\n\nexport default LabelInput;\n","import React from \"react\";\nimport { FormGroup, Input, Label, FormFeedback } from \"reactstrap\";\nimport { TimeSlotState } from \"../redux/types\";\n\ninterface Props {\n  label: string;\n  value: string;\n  options: Array<TimeSlotState>;\n  onSelect: (timeSlot: TimeSlotState) => void;\n  errorMessage?: string;\n}\n\nconst SelectInput = ({\n  label,\n  value,\n  options,\n  onSelect,\n  errorMessage,\n}: Props) => {\n  return (\n    <FormGroup>\n      {label !== \"\" && <Label for=\"exampleEmail\">{label}</Label>}\n      <Input\n        type=\"select\"\n        value={value}\n        invalid={errorMessage !== \"\"}\n        className=\"form-control\"\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n          const data = options.filter(\n            (option: TimeSlotState) => option.id === event.target.value\n          )[0];\n          onSelect(data);\n        }}\n      >\n        <option value={\"select\"}>Select</option>\n        {options.map((option: TimeSlotState, index: number) => (\n          <option value={option.id} key={index}>\n            {option.name}\n          </option>\n        ))}\n      </Input>\n      <FormFeedback>{errorMessage}</FormFeedback>\n    </FormGroup>\n  );\n};\n\nexport default SelectInput;\n","import React from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport clock from \"@iconify/icons-ant-design/clock-circle-outlined\";\nimport { Button } from \"reactstrap\";\n\ninterface Props {\n  id: string;\n  name: string;\n  lines: string[];\n  price: number;\n  duration: number;\n  selected: boolean;\n  onClick: () => void;\n}\n\nconst Package = ({\n  id,\n  name,\n  price,\n  duration,\n  selected,\n  lines,\n  onClick,\n}: Props) => (\n  <div className=\"package-item border py-2\">\n    <h6>{name}</h6>\n    <h3 className=\"text-primary\">${price}</h3>\n    <div className=\"flex-center border-top border-bottom py-1 my-2\">\n      <Icon icon={clock} width={\"0.7em\"} color=\"#313436\" className=\"icon\" />\n      <span className=\"text-muted\">{duration} Min</span>\n    </div>\n    <ul>\n      {lines &&\n        lines.map((item: string, index: number) => (\n          <li key={index}>\n            <span>\n              <small>{item}</small>\n            </span>\n          </li>\n        ))}\n    </ul>\n    <div className=\"pt-2\">\n      <Button\n        color={selected === true ? \"primary\" : \"secondary\"}\n        outline={selected === false}\n        className=\"px-4\"\n        onClick={onClick}\n        data-testid={`package-${id}`}\n      >\n        Select\n      </Button>\n    </div>\n  </div>\n);\n\nexport default Package;\n","import React from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport clock from \"@iconify/icons-ant-design/clock-circle-outlined\";\nimport tag from \"@iconify/icons-ant-design/tag-outlined\";\nimport { ListGroupItem, Button } from \"reactstrap\";\n\ninterface Props {\n  id: string;\n  name: string;\n  price: number;\n  duration: number;\n  selected?: boolean;\n  onClick?: () => void;\n}\n\nconst Addon = ({ id, name, price, duration, selected, onClick }: Props) => {\n  return (\n    <ListGroupItem className=\"addon-item\">\n      <span className=\"text\">\n        <small>{name}</small>\n      </span>\n      <div className=\"duration flex-center\">\n        <Icon icon={clock} width={\"0.7em\"} color=\"#313436\" className=\"icon\" />\n        <small>{duration} Min</small>\n      </div>\n      <div className=\"price flex-center\">\n        <Icon icon={tag} width={\"0.7em\"} color=\"#313436\" className=\"icon\" />\n        <small>${price}</small>\n      </div>\n      <div className=\"select flex-center\">\n        <Button\n          color={selected === true ? \"primary\" : \"secondary\"}\n          outline={selected === false}\n          className=\"px-4\"\n          onClick={onClick}\n          size=\"sm\"\n          data-testid={`addon-${id}`}\n        >\n          Select\n        </Button>\n      </div>\n    </ListGroupItem>\n  );\n};\n\nexport default Addon;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Button, ListGroup } from \"reactstrap\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { AppState } from \"../redux/reducers\";\nimport {\n  setBookingCompany,\n  setBookingDate,\n  setBookingTimeSlot,\n  setBookingType,\n  setBookingTotal,\n  setBookingPackage,\n  addBookingAddon,\n  removeBookingAddon,\n  resetBooking,\n} from \"../redux/actions\";\nimport {\n  CompanyState,\n  AddonState,\n  PackageState,\n  LocationState,\n  TimeSlotState,\n} from \"../redux/types\";\nimport Header from \"../components/Header\";\nimport Vehicle from \"../components/Vehicle\";\nimport DateInput from \"../components/DateInput\";\nimport TimeSelect from \"../components/TimeSelect\";\nimport Package from \"../components/Package\";\nimport Addon from \"../components/Addon\";\nimport { companies } from \"../test/data\";\nimport defaultLogo from \"../assets/images/company-default.jpg\";\n\ntype MatchProps = {\n  id: string;\n};\n\ninterface ErrorField {\n  bookingDate: string;\n  bookingTimeSlot: string;\n  bookingType: string;\n  bookingPackage: string;\n}\n\ninterface State extends CompanyState {\n  errors: ErrorField;\n}\n\ninterface Props extends RouteComponentProps<MatchProps> {\n  loggedIn: boolean;\n  address: LocationState;\n  bookingCompany: CompanyState | undefined;\n  bookingDate: number;\n  bookingTimeSlot: TimeSlotState | undefined;\n  bookingType: string;\n  bookingPackage: PackageState;\n  bookingAddons: Array<AddonState>;\n  bookingAddonIDs: string[];\n  bookingPrice: number;\n  bookingDuration: number;\n  setBookingCompany: typeof setBookingCompany;\n  setBookingDate: typeof setBookingDate;\n  setBookingTimeSlot: typeof setBookingTimeSlot;\n  setBookingType: typeof setBookingType;\n  setBookingTotal: typeof setBookingTotal;\n  setBookingPackage: typeof setBookingPackage;\n  addBookingAddon: typeof addBookingAddon;\n  removeBookingAddon: typeof removeBookingAddon;\n  resetBooking: typeof resetBooking;\n}\n\nclass Company extends React.Component<Props, State> {\n  readonly state: State = {\n    id: \"\",\n    name: \"\",\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    country: \"\",\n    phone: \"\",\n    email: \"\",\n    desc: \"\",\n    packages: [],\n    packagesTruck: [],\n    addons: [],\n    timeSlots: [],\n    errors: {\n      bookingDate: \"\",\n      bookingTimeSlot: \"\",\n      bookingType: \"\",\n      bookingPackage: \"\",\n    },\n  };\n\n  componentDidMount() {\n    const { match } = this.props;\n    const id = match.params.id;\n\n    if (id) {\n      this.loadCompany(id);\n    }\n  }\n\n  loadCompany = (id: string) => {\n    const { bookingCompany, setBookingCompany } = this.props;\n\n    const data = companies.filter(\n      (company: CompanyState) => company.id === id\n    )[0];\n\n    if (data) {\n      const { name, desc, packages, packagesTruck, addons, timeSlots } = data;\n      this.setState({\n        id,\n        name,\n        desc,\n        packages,\n        packagesTruck,\n        addons,\n        timeSlots,\n      });\n\n      if (bookingCompany === undefined) {\n        setBookingCompany(data);\n      } else if (bookingCompany.id !== id) {\n        setBookingCompany(data);\n      }\n\n      return true;\n    }\n  };\n\n  clearError = (name: keyof ErrorField) => {\n    const { errors } = this.state;\n    errors[name] = \"\";\n    this.setState({ errors });\n  };\n\n  setError = (name: keyof ErrorField, value: string) => {\n    const { errors } = this.state;\n    errors[name] = value;\n    this.setState({ errors });\n  };\n\n  selectBookingDate = (bookingDate: number) => {\n    const { setBookingDate } = this.props;\n    setBookingDate(bookingDate);\n    this.clearError(\"bookingDate\");\n  };\n\n  selectBookingTimeSlot = (timeSlot: TimeSlotState) => {\n    const { setBookingTimeSlot } = this.props;\n    setBookingTimeSlot(timeSlot);\n    this.clearError(\"bookingTimeSlot\");\n  };\n\n  selectBookingType = (bookingType: string) => {\n    const { setBookingType } = this.props;\n    setBookingType(bookingType);\n    this.clearError(\"bookingType\");\n  };\n\n  selectBookingPackage = (bookingPackage: PackageState) => {\n    const { setBookingPackage } = this.props;\n    setBookingPackage(bookingPackage);\n    this.clearError(\"bookingPackage\");\n  };\n\n  selectBookingAddon = (bookingAddon: AddonState) => {\n    const { id } = bookingAddon;\n    const { addBookingAddon, removeBookingAddon, bookingAddonIDs } = this.props;\n\n    if (bookingAddonIDs.includes(id)) {\n      removeBookingAddon(bookingAddon);\n      return;\n    }\n    addBookingAddon(bookingAddon);\n  };\n\n  calcTotals = () => {\n    const { setBookingTotal, bookingPackage, bookingAddons } = this.props;\n\n    let totalPrice = 0;\n    let totalDuration = 0;\n\n    if (bookingPackage.price > 0) {\n      totalPrice += bookingPackage.price;\n      totalDuration += bookingPackage.duration;\n    }\n    for (let i = 0; i < bookingAddons.length; i++) {\n      totalPrice += bookingAddons[i].price;\n      totalDuration += bookingAddons[i].duration;\n    }\n\n    const price = parseFloat(totalPrice.toFixed(2));\n    const duration = totalDuration;\n\n    setBookingTotal({ price, duration });\n  };\n\n  componentDidUpdate = (prevProps: Props) => {\n    const { bookingPackage, bookingAddonIDs } = this.props;\n\n    if (prevProps.bookingPackage !== bookingPackage) {\n      this.calcTotals();\n    } else if (prevProps.bookingAddonIDs !== bookingAddonIDs) {\n      this.calcTotals();\n    }\n  };\n\n  login = () => {\n    const { history, bookingCompany } = this.props;\n\n    if (bookingCompany) {\n      history.push(`/login/company/${bookingCompany.id}`);\n    }\n  };\n\n  checkout = () => {\n    const {\n      history,\n      bookingPackage,\n      bookingTimeSlot,\n      bookingType,\n    } = this.props;\n\n    let errors = 0;\n\n    if (bookingTimeSlot === undefined) {\n      this.setError(\"bookingTimeSlot\", \"Required\");\n      errors = 1;\n    }\n\n    if (bookingType === \"\") {\n      this.setError(\"bookingType\", \"Required\");\n      errors = 1;\n    }\n\n    if (bookingPackage.id === \"\") {\n      this.setError(\"bookingPackage\", \"Required\");\n      errors = 1;\n    }\n\n    if (errors > 0) {\n      return false;\n    }\n\n    history.push(`/checkout/`);\n  };\n\n  render() {\n    const {\n      id,\n      name,\n      desc,\n      packages,\n      packagesTruck,\n      addons,\n      timeSlots,\n      errors,\n    } = this.state;\n\n    const {\n      loggedIn,\n      bookingDate,\n      bookingTimeSlot,\n      bookingType,\n      bookingPackage,\n      bookingAddonIDs,\n      bookingPrice,\n      bookingDuration,\n    } = this.props;\n\n    const currentPackages = bookingType === \"Truck\" ? packagesTruck : packages;\n\n    console.log(errors);\n\n    return (\n      <div className=\"App\">\n        <Header showSearch={false} page={`/company/${id}`} />\n        <Container>\n          <Row className=\"mt-2 mb-2\">\n            <Col>\n              <img src={defaultLogo} className=\"company-banner\" alt={name} />\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\" xl=\"6\">\n              <Row>\n                <Col>\n                  <h2>{name}</h2>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <p>{desc}</p>\n                </Col>\n              </Row>\n            </Col>\n            <Col sm=\"12\" xl=\"6\">\n              <Row>\n                <Col>\n                  <div className=\"booking-container border p-3\">\n                    <div className=\"pb-1\">\n                      <h6>When do you want your car washed?</h6>\n                      <Row>\n                        <Col sm=\"12\" lg=\"6\">\n                          <DateInput\n                            label=\"Date\"\n                            date={bookingDate}\n                            onChange={this.selectBookingDate}\n                            errorMessage={errors.bookingDate}\n                          />\n                        </Col>\n                        <Col sm=\"12\" lg=\"6\">\n                          <TimeSelect\n                            label=\"Time\"\n                            value={\n                              bookingTimeSlot ? bookingTimeSlot.id : \"select\"\n                            }\n                            onSelect={this.selectBookingTimeSlot}\n                            options={timeSlots}\n                            errorMessage={errors.bookingTimeSlot}\n                          />\n                        </Col>\n                      </Row>\n                    </div>\n                    <div className=\"pb-2\">\n                      <h6>What kind of car do you drive?</h6>\n                      <Row>\n                        <Col sm=\"12\" lg=\"6\" className=\"pb-2\">\n                          <Vehicle\n                            name=\"Car\"\n                            icon=\"car\"\n                            iconColor=\"#154379\"\n                            selected={bookingType === \"Car\"}\n                            onClick={() => this.selectBookingType(\"Car\")}\n                          />\n                        </Col>\n                        <Col sm=\"12\" lg=\"6\">\n                          <Vehicle\n                            name=\"Truck\"\n                            icon=\"truck\"\n                            iconColor=\"#ef412d\"\n                            selected={bookingType === \"Truck\"}\n                            onClick={() => this.selectBookingType(\"Truck\")}\n                          />\n                        </Col>\n                      </Row>\n                      {errors.bookingType !== \"\" && (\n                        <span className=\"text-danger\">\n                          {errors.bookingType}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"pb-2\">\n                      <h6>Select Package</h6>\n                      <Row className=\"no-gutters\">\n                        {currentPackages.map(\n                          (item: PackageState, index: number) => (\n                            <React.Fragment key={index}>\n                              {index % 4 === 0 && index !== 0 && (\n                                <div className=\"w-100\"></div>\n                              )}\n                              <Col key={index} sm=\"3\" className=\"pb-2 px-1\">\n                                <Package\n                                  id={item.id}\n                                  name={item.name}\n                                  price={item.price}\n                                  duration={item.duration}\n                                  lines={item.lines}\n                                  selected={bookingPackage.id === item.id}\n                                  onClick={() =>\n                                    this.selectBookingPackage(item)\n                                  }\n                                />\n                              </Col>\n                            </React.Fragment>\n                          )\n                        )}\n                      </Row>\n                      {errors.bookingPackage !== \"\" && (\n                        <span className=\"text-danger\">\n                          {errors.bookingPackage}\n                        </span>\n                      )}\n                    </div>\n                    <div className=\"pb-3\">\n                      <h6>Select Addons (Optional)</h6>\n                      <ListGroup className=\"addon-container\">\n                        {addons &&\n                          addons.map((item: AddonState, index: number) => (\n                            <Addon\n                              key={index}\n                              id={item.id}\n                              name={item.name}\n                              price={item.price}\n                              duration={item.duration}\n                              selected={bookingAddonIDs.includes(item.id)}\n                              onClick={() => this.selectBookingAddon(item)}\n                            />\n                          ))}\n                      </ListGroup>\n                    </div>\n                    <div className=\"pb-2\">\n                      <h6>Payment Details</h6>\n                      <span className=\"d-block\">\n                        Total Time: {bookingDuration} Mins\n                      </span>\n                      <span className=\"d-block\">\n                        Total Price: ${bookingPrice}\n                      </span>\n                    </div>\n                    {loggedIn ? (\n                      <Button\n                        onClick={this.checkout}\n                        color=\"primary\"\n                        size=\"lg\"\n                        block\n                      >\n                        Book Your Wash\n                      </Button>\n                    ) : (\n                      <Button\n                        onClick={this.login}\n                        color=\"primary\"\n                        size=\"lg\"\n                        block\n                      >\n                        Login to book\n                      </Button>\n                    )}\n                  </div>\n                  <br />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth, search, booking }: AppState) => {\n  const { loggedIn } = auth;\n  const { address } = search;\n  const {\n    bookingCompany,\n    bookingDate,\n    bookingTimeSlot,\n    bookingType,\n    bookingPackage,\n    bookingAddons,\n    bookingAddonIDs,\n    bookingPrice,\n    bookingDuration,\n  } = booking;\n  return {\n    loggedIn,\n    address,\n    bookingCompany,\n    bookingDate,\n    bookingTimeSlot,\n    bookingType,\n    bookingPackage,\n    bookingAddons,\n    bookingAddonIDs,\n    bookingPrice,\n    bookingDuration,\n  };\n};\n\nconst mapDispatchToProps = {\n  setBookingCompany,\n  setBookingDate,\n  setBookingTimeSlot,\n  setBookingType,\n  setBookingTotal,\n  setBookingPackage,\n  addBookingAddon,\n  removeBookingAddon,\n  resetBooking,\n};\n\nconst ConnectedComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Company);\n\nexport default withRouter(ConnectedComponent);\n","import {\n  SET_BOOKING_COMPANY,\n  SET_BOOKING_DATE,\n  SET_BOOKING_TIMESLOT,\n  SET_BOOKING_TYPE,\n  SET_BOOKING_TOTAL,\n  SET_BOOKING_PACKAGE,\n  ADD_BOOKING_ADDON,\n  REMOVE_BOOKING_ADDON,\n  RESET_BOOKING,\n  AddonState,\n  PackageState,\n  CompanyState,\n  TimeSlotState,\n} from \"../types\";\n\nexport const setBookingCompany = (payload: CompanyState) => {\n  return {\n    type: SET_BOOKING_COMPANY,\n    payload,\n  };\n};\n\nexport const setBookingDate = (payload: number) => {\n  return {\n    type: SET_BOOKING_DATE,\n    payload,\n  };\n};\n\nexport const setBookingTimeSlot = (payload: TimeSlotState) => {\n  return {\n    type: SET_BOOKING_TIMESLOT,\n    payload,\n  };\n};\n\nexport const setBookingType = (payload: string) => {\n  return {\n    type: SET_BOOKING_TYPE,\n    payload,\n  };\n};\n\nexport const setBookingTotal = (payload: object) => {\n  return {\n    type: SET_BOOKING_TOTAL,\n    payload,\n  };\n};\n\nexport const setBookingPackage = (payload: PackageState) => {\n  return {\n    type: SET_BOOKING_PACKAGE,\n    payload,\n  };\n};\n\nexport const addBookingAddon = (payload: AddonState) => {\n  return {\n    type: ADD_BOOKING_ADDON,\n    payload,\n  };\n};\n\nexport const removeBookingAddon = (payload: AddonState) => {\n  return {\n    type: REMOVE_BOOKING_ADDON,\n    payload,\n  };\n};\n\nexport const resetBooking = () => {\n  return {\n    type: RESET_BOOKING,\n  };\n};\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../redux/reducers\";\nimport { LocationState, CompanyState } from \"../redux/types\";\nimport Header from \"../components/Header\";\n\ninterface Props {\n  address: LocationState;\n  bookingCompany: CompanyState;\n}\n\nclass Checkout extends React.Component<Props> {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header showSearch={false} page=\"/search\" />\n        <Container className=\"pt-4\">\n          <Row>\n            <Col sm=\"12\" xl=\"8\">\n              <div>\n                <h2>Checkout</h2>\n              </div>\n            </Col>\n            <Col sm=\"12\" xl=\"4\">\n              <div></div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ search, booking }: AppState) => {\n  const { address } = search;\n  const { bookingCompany } = booking;\n  return { address, bookingCompany };\n};\n\nexport default connect(mapStateToProps, undefined)(Checkout);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport Landing from \"./scenes/Landing\";\nimport Login from \"./scenes/Login\";\nimport Search from \"./scenes/Search\";\nimport Company from \"./scenes/Company\";\nimport Checkout from \"./scenes/Checkout\";\nimport { AppState } from \"./redux/reducers\";\n\ninterface Props {\n  loggedIn: boolean;\n}\n\nclass Router extends React.Component<Props> {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/login\" component={Login} exact />\n          <Route path=\"/login/:page\" component={Login} exact />\n          <Route path=\"/login/:page/:id\" component={Login} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/company/:id\" component={Company} />\n          <ProtectedRoute\n            path=\"/checkout\"\n            component={Checkout}\n            loggedIn={this.props.loggedIn}\n          />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: AppState) => {\n  const { loggedIn } = auth;\n  return { loggedIn };\n};\n\nexport default connect(mapStateToProps, undefined)(Router);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport Router from \"./Router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./assets/css/App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router loggedIn={false} />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./assets/css/App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/company-default.92886368.jpg\";","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport interface AuthState {\n  id: string;\n  username: string;\n  token: string;\n  loggedIn: boolean;\n}\n\ninterface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: AuthState;\n}\n\nexport interface LogoutAction {\n  type: typeof LOGOUT;\n}\n\nexport type AuthActionTypes = LoginSuccessAction | LogoutAction;\n","import { CompanyState } from \"../types\";\nexport const SEARCH_SET = \"SEARCH_SET\";\nexport const SEARCH_START = \"SEARCH_START\";\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\n\nexport interface LocationState {\n  name: string;\n  address: string;\n}\n\nexport interface SearchState {\n  searching: boolean;\n  address: LocationState;\n  companies: Array<CompanyState>;\n}\n\ninterface SearchSetAction {\n  type: typeof SEARCH_SET;\n  payload: LocationState;\n}\n\ninterface SearchStartAction {\n  type: typeof SEARCH_START;\n  payload: LocationState;\n}\n\ninterface SearchFailAction {\n  type: typeof SEARCH_FAIL;\n  payload: LocationState;\n}\n\ninterface SearchSuccessAction {\n  type: typeof SEARCH_SUCCESS;\n  payload: SearchState;\n}\n\nexport type SearchActionTypes =\n  | SearchSetAction\n  | SearchStartAction\n  | SearchFailAction\n  | SearchSuccessAction;\n","import {\n  PackageState,\n  AddonState,\n  CompanyState,\n  TimeSlotState,\n} from \"../types\";\nexport const SET_BOOKING_COMPANY = \"SET_BOOKING_COMPANY\";\nexport const SET_BOOKING_DATE = \"SET_BOOKING_DATE\";\nexport const SET_BOOKING_TIMESLOT = \"SET_BOOKING_TIMESLOT\";\nexport const SET_BOOKING_TYPE = \"SET_BOOKING_TYPE\";\nexport const SET_BOOKING_TOTAL = \"SET_BOOKING_TOTAL\";\nexport const SET_BOOKING_PACKAGE = \"SET_BOOKING_PACKAGE\";\nexport const ADD_BOOKING_ADDON = \"ADD_BOOKING_ADDON\";\nexport const REMOVE_BOOKING_ADDON = \"REMOVE_BOOKING_ADDON\";\nexport const RESET_BOOKING = \"RESET_BOOKING\";\n\nexport interface BookingState {\n  bookingCompany: CompanyState | undefined;\n  bookingDate: number;\n  bookingTimeSlot: TimeSlotState | undefined;\n  bookingType: string;\n  bookingPackage: PackageState;\n  bookingAddons: Array<AddonState>;\n  bookingAddonIDs: string[];\n  bookingPrice: number;\n  bookingDuration: number;\n}\n\ninterface SetBookingCompanyAction {\n  type: typeof SET_BOOKING_COMPANY;\n  payload: CompanyState;\n}\n\ninterface SetBookingDateAction {\n  type: typeof SET_BOOKING_DATE;\n  payload: number;\n}\n\ninterface SetBookingTimeSlotAction {\n  type: typeof SET_BOOKING_TIMESLOT;\n  payload: TimeSlotState;\n}\n\ninterface SetBookingTypeAction {\n  type: typeof SET_BOOKING_TYPE;\n  payload: string;\n}\n\ninterface SetBookingTotalAction {\n  type: typeof SET_BOOKING_TOTAL;\n  payload: { price: number; duration: number };\n}\n\ninterface SetBookingPackageAction {\n  type: typeof SET_BOOKING_PACKAGE;\n  payload: PackageState;\n}\n\ninterface AddBookingAddonAction {\n  type: typeof ADD_BOOKING_ADDON;\n  payload: AddonState;\n}\n\ninterface RemoveBookingAddonAction {\n  type: typeof REMOVE_BOOKING_ADDON;\n  payload: AddonState;\n}\n\ninterface ResetBookingAction {\n  type: typeof RESET_BOOKING;\n}\n\nexport type BookingActionTypes =\n  | SetBookingCompanyAction\n  | SetBookingDateAction\n  | SetBookingTimeSlotAction\n  | SetBookingTypeAction\n  | SetBookingTotalAction\n  | SetBookingPackageAction\n  | AddBookingAddonAction\n  | RemoveBookingAddonAction\n  | ResetBookingAction;\n","export * from \"./authTypes\";\nexport * from \"./searchTypes\";\nexport * from \"./companyTypes\";\nexport * from \"./bookingTypes\";\n"],"sourceRoot":""}