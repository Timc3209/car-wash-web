{"version":3,"sources":["redux/reducers/authReducer.ts","redux/reducers/searchReducer.ts","redux/reducers/bookingReducer.ts","redux/reducers/index.ts","redux/store.ts","components/LocationAutocomplete.tsx","test/data.ts","components/SearchAddress.tsx","redux/actions/searchActions.ts","components/Header.tsx","scenes/Landing.tsx","components/Company.tsx","components/CompanyList.tsx","components/Spinner.tsx","scenes/Search.tsx","components/Vehicle.tsx","components/DateInput.tsx","components/Package.tsx","components/Addon.tsx","scenes/Company.tsx","redux/actions/bookingActions.ts","Router.tsx","App.tsx","serviceWorker.ts","index.tsx","assets/images/company-default.jpg","redux/types/authTypes.ts","redux/types/searchTypes.ts","redux/types/bookingTypes.ts","redux/types/index.ts"],"names":["INITIAL_STATE","id","username","token","loggedIn","searching","address","companies","bookingDate","Date","bookingType","bookingPackage","name","price","duration","lines","bookingAddons","bookingAddonIDs","bookingPrice","bookingDuration","rootReducer","combineReducers","auth","state","action","type","LOGIN_SUCCESS","payload","LOGOUT","search","SEARCH_SET","SEARCH_START","SEARCH_FAIL","SEARCH_SUCCESS","booking","SET_BOOKING_DATE","SET_BOOKING_TYPE","SET_BOOKING_TOTAL","SET_BOOKING_PACKAGE","ADD_BOOKING_ADDON","REMOVE_BOOKING_ADDON","filter","addon","RESET_BOOKING","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","middleware","composeWithDevTools","applyMiddleware","thunk","store","createStore","persistor","persistStore","props","className","placeholder","onChange","setRef","data-testid","ref","options","appId","process","ALGOLIA_APP_ID","apiKey","ALGOLIA_APP_KEY","language","countries","aroundLatLng","aroundLatLngViaIP","suggestion","value","onLimit","console","log","onError","defaultPackages","defaultAddons","desc","street","city","zip","country","phone","email","packages","addons","SearchAddress","inputRef","createRef","searchAddress","searchStart","searchSuccess","autocomplete","setVal","searchData","setTimeout","onAddressChanged","searchSet","landing","history","push","this","LocationAutocomplete","React","Component","mapDispatchToProps","ConnectedComponent","connect","withRouter","Header","fixed","showSearch","Navbar","color","dark","expand","NavbarBrand","href","Nav","navbar","NavItem","NavLink","to","Landing","Container","Row","Col","Form","sm","md","lg","Button","size","block","Company","Card","CardImg","top","width","src","defaultLogo","alt","CardBody","CardTitle","CardText","CompanyList","title","map","company","index","Fragment","Spinner","style","height","Search","undefined","Vehicle","icon","iconColor","selected","onClick","iconImport","truckPickup","carSide","LabelInput","label","date","FormGroup","Label","for","withPortal","Package","clock","item","outline","Addon","ListGroupItem","tag","loadCompany","data","setState","selectBookingDate","setBookingDate","selectBookingType","setBookingType","selectBookingPackage","setBookingPackage","selectBookingAddon","bookingAddon","addBookingAddon","removeBookingAddon","includes","calcTotals","setBookingTotal","totalPrice","totalDuration","i","length","parseFloat","toFixed","componentDidUpdate","prevProps","match","resetBooking","params","xl","DateInput","ListGroup","Router","exact","path","component","App","loading","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.7de2054f.chunk.js","sourcesContent":["import { LOGIN_SUCCESS, LOGOUT, AuthState, AuthActionTypes } from \"../types\";\n\nexport const INITIAL_STATE: AuthState = {\n  id: \"0\",\n  username: \"\",\n  token: \"\",\n  loggedIn: false,\n};\n\nexport const INITIAL_STATE_LOGGED: AuthState = {\n  id: \"demo\",\n  username: \"demo\",\n  token: \"demo\",\n  loggedIn: true,\n};\n\nexport function reducer(state = INITIAL_STATE, action: AuthActionTypes) {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        id: action.payload.id,\n        username: action.payload.username,\n        token: action.payload.token,\n        loggedIn: action.payload.loggedIn,\n      };\n    case LOGOUT:\n      return { ...INITIAL_STATE };\n    default:\n      return state;\n  }\n}\n","import {\n  SEARCH_SUCCESS,\n  SEARCH_SET,\n  SEARCH_START,\n  SEARCH_FAIL,\n  SearchState,\n  SearchActionTypes,\n} from \"../types\";\n\nexport const INITIAL_STATE: SearchState = {\n  searching: false,\n  address: \"\",\n  companies: [],\n};\n\nexport function reducer(state = INITIAL_STATE, action: SearchActionTypes) {\n  switch (action.type) {\n    case SEARCH_SET:\n      return {\n        ...state,\n        address: action.payload,\n      };\n    case SEARCH_START:\n      return {\n        ...state,\n        address: action.payload,\n        searching: true,\n      };\n    case SEARCH_FAIL:\n      return {\n        ...state,\n        address: action.payload,\n        searching: false,\n      };\n    case SEARCH_SUCCESS:\n      return {\n        ...state,\n        searching: action.payload.searching,\n        address: action.payload.address,\n        companies: action.payload.companies,\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  SET_BOOKING_DATE,\n  SET_BOOKING_TYPE,\n  SET_BOOKING_PACKAGE,\n  SET_BOOKING_TOTAL,\n  ADD_BOOKING_ADDON,\n  REMOVE_BOOKING_ADDON,\n  RESET_BOOKING,\n  AddonState,\n  BookingState,\n  BookingActionTypes,\n} from \"../types\";\n\nexport const INITIAL_STATE: BookingState = {\n  bookingDate: new Date(),\n  bookingType: \"\",\n  bookingPackage: { id: \"\", name: \"\", price: 0, duration: 0, lines: [] },\n  bookingAddons: [],\n  bookingAddonIDs: [],\n  bookingPrice: 0,\n  bookingDuration: 0,\n};\n\nexport function reducer(state = INITIAL_STATE, action: BookingActionTypes) {\n  switch (action.type) {\n    case SET_BOOKING_DATE:\n      return {\n        ...state,\n        bookingDate: action.payload,\n      };\n    case SET_BOOKING_TYPE:\n      return {\n        ...state,\n        bookingType: action.payload,\n      };\n    case SET_BOOKING_TOTAL:\n      return {\n        ...state,\n        bookingPrice: action.payload.price,\n        bookingDuration: action.payload.duration,\n      };\n    case SET_BOOKING_PACKAGE:\n      return {\n        ...state,\n        bookingPackage: action.payload,\n      };\n    case ADD_BOOKING_ADDON:\n      return {\n        ...state,\n        bookingAddons: [...state.bookingAddons, action.payload],\n        bookingAddonIDs: [...state.bookingAddonIDs, action.payload.id],\n      };\n    case REMOVE_BOOKING_ADDON:\n      return {\n        ...state,\n        bookingAddons: state.bookingAddons.filter(\n          (addon: AddonState) => addon.id !== action.payload.id\n        ),\n        bookingAddonIDs: state.bookingAddonIDs.filter(\n          (id: string) => id !== action.payload.id\n        ),\n      };\n    case RESET_BOOKING:\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport * as authReducer from \"./authReducer\";\nimport * as searchReducer from \"./searchReducer\";\nimport * as bookingReducer from \"./bookingReducer\";\nimport { AuthState, SearchState, BookingState } from \"../types\";\n\nexport interface AppState {\n  auth: AuthState;\n  search: SearchState;\n  booking: BookingState;\n}\n\nexport const AppInitialState: AppState = {\n  auth: authReducer.INITIAL_STATE,\n  search: searchReducer.INITIAL_STATE,\n  booking: bookingReducer.INITIAL_STATE,\n};\n\nexport const rootReducer = combineReducers({\n  auth: authReducer.reducer,\n  search: searchReducer.reducer,\n  booking: bookingReducer.reducer,\n});\n","import { applyMiddleware, createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport storage from \"redux-persist/lib/storage\";\nimport thunk from \"redux-thunk\";\nimport { AppState, rootReducer } from \"./reducers\";\n\nconst persistConfig = {\n  key: \"main\",\n  storage,\n  blacklist: [\"booking\"],\n};\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst persistedReducer = persistReducer<AppState, any>(\n  persistConfig,\n  rootReducer\n);\n\nconst middleware = composeWithDevTools(applyMiddleware(thunk));\nconst store = createStore(persistedReducer, middleware);\nconst persistor = persistStore(store);\nexport { store, persistor };\n","import React from \"react\";\nimport AlgoliaPlaces from \"algolia-places-react\";\n\ninterface Props {\n  className: string;\n  placeholder: string;\n  onChange: (address: string) => void;\n  setRef?: any;\n}\n\ninterface OnChangeProps {\n  query: string;\n  suggestion: { value: string };\n}\n\nexport default (props: Props) => {\n  const { className, placeholder, onChange, setRef } = props;\n  return (\n    <AlgoliaPlaces\n      data-testid={\"location-autocomplete\"}\n      ref={setRef && setRef}\n      placeholder={placeholder}\n      className={className}\n      options={{\n        appId: process.env.ALGOLIA_APP_ID,\n        apiKey: process.env.ALGOLIA_APP_KEY,\n        language: \"en\",\n        countries: [\"us\"],\n        aroundLatLng: \"29.5652,-98.3364\",\n        aroundLatLngViaIP: false,\n        type: \"address\",\n      }}\n      onChange={({ suggestion }: OnChangeProps) => onChange(suggestion.value)}\n      onLimit={() =>\n        console.log(\"Fired when you reached your current rate limit.\")\n      }\n      onError={() =>\n        console.log(\n          \"Fired when we could not make the request to Algolia Places servers for any reason but reaching your rate limit.\"\n        )\n      }\n    />\n  );\n};\n","import { CompanyState, PackageState, AddonState } from \"../redux/types\";\n\nexport const defaultPackages: Array<PackageState> = [\n  {\n    id: \"xac14768-ab4b-43d1-a18e-2fb12a75eae2\",\n    name: \"Ultimate\",\n    price: 49.99,\n    duration: 75,\n    lines: [\n      \"Exterior Hand Wash\",\n      \"Hand Dry\",\n      \"Wheel Shine\",\n      \"Hand Wax\",\n      \"Rain-X\",\n    ],\n  },\n  {\n    id: \"xbc14768-ab4b-43d1-a18e-2fb12a75eae2\",\n    name: \"Supreme\",\n    price: 39.99,\n    duration: 60,\n    lines: [\"Exterior Hand Wash\", \"Hand Dry\", \"Wheel Shine\", \"Hand Wax\"],\n  },\n  {\n    id: \"xcc14768-ab4b-43d1-a18e-2fb12a75eae2\",\n    name: \"Basic\",\n    price: 29.99,\n    duration: 45,\n    lines: [\"Exterior Hand Wash\", \"Hand Dry\", \"Wheel Shine\"],\n  },\n  {\n    id: \"xdc14768-ab4b-43d1-a18e-2fb12a75eae2\",\n    name: \"Deluxe\",\n    price: 19.99,\n    duration: 30,\n    lines: [\"Exterior Hand Wash\", \"Hand Dry\"],\n  },\n];\n\nexport const defaultAddons: Array<AddonState> = [\n  {\n    id: \"xac14768-ab4b-43d1-a18e-2fb10a75eae2\",\n    name: \"Dashboard Conditioner\",\n    price: 9.99,\n    duration: 10,\n  },\n  {\n    id: \"xbc14768-ab4b-43d1-a18e-2f412a75eae2\",\n    name: \"Fragrance\",\n    price: 2.99,\n    duration: 5,\n  },\n];\n\nexport const companies: Array<CompanyState> = [\n  {\n    id: \"bcc14768-ab4b-43d1-a18e-2fb12a75eae2\",\n    name: \"Dream Wash\",\n    desc:\n      \"The Dream Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@dreamwash.com\",\n    packages: defaultPackages,\n    addons: defaultAddons,\n  },\n  {\n    id: \"c1a673cf-f667-4c08-a909-a5b3b51addc8\",\n    name: \"Jet Wash\",\n    desc:\n      \"The Jet Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@jetwash.com\",\n    packages: defaultPackages,\n    addons: defaultAddons,\n  },\n  {\n    id: \"46e186dd-69b8-49bc-8a9f-93f353279e3d\",\n    name: \"Fast Wash\",\n    desc:\n      \"The Fast Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@fastwash.com\",\n    packages: defaultPackages,\n    addons: defaultAddons,\n  },\n  {\n    id: \"16e186dd-69b8-49bc-8a9f-93f353279e3d\",\n    name: \"New Dream Wash\",\n    desc:\n      \"The New Dream Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@dreamwash.com\",\n    packages: defaultPackages,\n    addons: defaultAddons,\n  },\n  {\n    id: \"26e186dd-69b8-49bc-8a9f-93f353279e3d\",\n    name: \"New Jet Wash\",\n    desc:\n      \"The New Jet Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@jetwash.com\",\n    packages: defaultPackages,\n    addons: defaultAddons,\n  },\n  {\n    id: \"36e186dd-69b8-49bc-8a9f-93f353279e3d\",\n    name: \"New Fast Wash\",\n    desc:\n      \"The New Fast Car Wash is one of the most reliable car wash and detailing businesses in San Antonio, TX\",\n    street: \"500 Trumbal\",\n    city: \"Live Oak\",\n    state: \"Texas\",\n    zip: \"78233\",\n    country: \"USA\",\n    phone: \"2104444444\",\n    email: \"support@fastwash.com\",\n    packages: defaultPackages,\n    addons: defaultAddons,\n  },\n];\n","import React, { createRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { searchSet, searchStart, searchSuccess } from \"../redux/actions\";\nimport { AppState } from \"../redux/reducers\";\nimport LocationAutocomplete from \"./LocationAutocomplete\";\nimport { companies } from \"../test/data\";\n\ninterface Props extends RouteComponentProps {\n  searchSuccess: typeof searchSuccess;\n  searchStart: typeof searchStart;\n  searchSet: typeof searchSet;\n  address: string;\n  landing: boolean;\n}\n\nclass SearchAddress extends React.Component<Props, any> {\n  private inputRef: any = createRef();\n\n  componentDidMount() {\n    const { landing, address } = this.props;\n\n    if (landing === false) {\n      this.searchAddress(address);\n    }\n  }\n\n  searchAddress = (address: string) => {\n    const { searchStart, searchSuccess } = this.props;\n\n    if (this.inputRef) {\n      this.inputRef.autocomplete.setVal(address);\n    }\n\n    const searchData = { address, companies, searching: false };\n    searchStart(address);\n    setTimeout(() => searchSuccess(searchData), 250);\n  };\n\n  onAddressChanged = (address: string) => {\n    const { searchSet, landing, history } = this.props;\n\n    if (landing === false) {\n      this.searchAddress(address);\n      return;\n    }\n    searchSet(address);\n    history.push(\"/search/\");\n  };\n\n  setRef = (ref: any) => {\n    this.inputRef = ref;\n  };\n\n  render() {\n    const { landing } = this.props;\n    return (\n      <LocationAutocomplete\n        className={landing ? \"form-control-lg form-control\" : \"form-control\"}\n        placeholder=\"Enter address\"\n        setRef={this.setRef}\n        onChange={this.onAddressChanged}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = ({ search }: AppState) => {\n  const { address } = search;\n  return { address };\n};\n\nconst mapDispatchToProps = {\n  searchSuccess,\n  searchSet,\n  searchStart,\n};\n\nconst ConnectedComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SearchAddress);\n\nexport default withRouter(ConnectedComponent);\n","import {\n  SEARCH_SUCCESS,\n  SEARCH_SET,\n  SEARCH_START,\n  SEARCH_FAIL,\n  SearchState,\n} from \"../types\";\n\nexport const searchSuccess = (payload: SearchState) => {\n  return {\n    type: SEARCH_SUCCESS,\n    payload,\n  };\n};\n\nexport const searchSet = (payload: string) => {\n  return {\n    type: SEARCH_SET,\n    payload,\n  };\n};\n\nexport const searchStart = (payload: string) => {\n  return {\n    type: SEARCH_START,\n    payload,\n  };\n};\n\nexport const searchFail = (payload: string) => {\n  return {\n    type: SEARCH_FAIL,\n    payload,\n  };\n};\n","import React from \"react\";\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"reactstrap\";\nimport SearchAddress from \"./SearchAddress\";\n\ninterface Props {\n  fixed?: string;\n  showSearch: boolean;\n}\n\nexport default class Header extends React.Component<Props, any> {\n  render() {\n    const { fixed, showSearch } = this.props;\n    return (\n      <div className=\"header-container\">\n        <Navbar color=\"dark\" dark expand=\"md\" fixed={fixed}>\n          <NavbarBrand href=\"#\">Car Wash</NavbarBrand>\n          {showSearch && (\n            <div className=\"navbar-search desktop-only\">\n              <SearchAddress landing={false} />\n            </div>\n          )}\n          <div className=\"navbar-right\">\n            <Nav navbar>\n              <NavItem>\n                <NavLink to=\"/login\" className=\"nav-link\">\n                  Sign In\n                </NavLink>\n              </NavItem>\n            </Nav>\n          </div>\n        </Navbar>\n        {showSearch && (\n          <div className=\"navbar-search-mobile mobile-only\">\n            <SearchAddress landing={false} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Container, Row, Col, Form, Button } from \"reactstrap\";\nimport Header from \"../components/Header\";\nimport SearchAddress from \"../components/SearchAddress\";\n\ninterface Props {}\n\ninterface States {}\n\nclass Landing extends React.Component<Props, States> {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header fixed=\"top\" showSearch={false} />\n        <main className=\"landing-background\">\n          <div className=\"overlay\"></div>\n          <Container>\n            <Row>\n              <Col>\n                <h1 className=\"mb-5 text-white\">\n                  Where do you want to wash your car?\n                </h1>\n              </Col>\n            </Row>\n            <Form>\n              <Row>\n                <Col sm=\"12\" md=\"8\" lg=\"9\" className=\"mb-4\">\n                  <SearchAddress landing={true} />\n                </Col>\n                <Col sm=\"12\" md=\"4\" lg=\"3\">\n                  <Button color=\"primary\" size=\"lg\" block>\n                    Book Your Wash\n                  </Button>\n                </Col>\n              </Row>\n            </Form>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Landing;\n","import React from \"react\";\nimport { Card, CardBody, CardTitle, CardImg, CardText } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { CompanyState } from \"../redux/types\";\nimport defaultLogo from \"../assets/images/company-default.jpg\";\n\nconst Company = ({ id, name, desc }: CompanyState) => (\n  <Link to={`/company/${id}`} className=\"company-card\">\n    <Card className=\"box-shadow mt-2 mb-2\">\n      <CardImg top width=\"100%\" src={defaultLogo} alt={name} />\n      <CardBody>\n        <CardTitle>\n          <h4>{name}</h4>\n        </CardTitle>\n        <CardText>{desc}</CardText>\n      </CardBody>\n    </Card>\n  </Link>\n);\n\nexport default Company;\n","import React from \"react\";\nimport { Container, Row, Col } from \"reactstrap\";\nimport Company from \"./Company\";\nimport { CompanyState } from \"../redux/types\";\n\ninterface Props {\n  title: string;\n  companies: Array<CompanyState>;\n}\n\nexport default class CompanyList extends React.Component<Props, any> {\n  render() {\n    const { title, companies } = this.props;\n    return (\n      <Container>\n        <Row>\n          <Col>\n            <h1 className=\"mt-4 mb-4\">{title}</h1>\n          </Col>\n        </Row>\n        <Row>\n          {companies.map((company: CompanyState, index: number) => (\n            <React.Fragment key={index}>\n              {index % 3 === 0 && index !== 0 && <div className=\"w-100\"></div>}\n              <Col sm=\"12\" lg=\"4\">\n                <Company\n                  id={company.id}\n                  name={company.name}\n                  desc={company.desc}\n                  street={company.street}\n                  city={company.city}\n                  state={company.state}\n                  zip={company.zip}\n                  country={company.country}\n                  phone={company.phone}\n                  email={company.email}\n                  packages={company.packages}\n                  addons={company.addons}\n                />\n              </Col>\n            </React.Fragment>\n          ))}\n        </Row>\n      </Container>\n    );\n  }\n}\n","import React from \"react\";\nimport { Spinner as ReactstrapSpinner } from \"reactstrap\";\n\nexport default class Spinner extends React.Component<any, any> {\n  render() {\n    return (\n      <div className=\"spinner-container\">\n        <ReactstrapSpinner style={{ width: \"3rem\", height: \"3rem\" }} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../redux/reducers\";\nimport { CompanyState } from \"../redux/types\";\nimport Header from \"../components/Header\";\nimport CompanyList from \"../components/CompanyList\";\nimport Spinner from \"../components/Spinner\";\n\ninterface Props {\n  address: string;\n  searching: boolean;\n  companies: Array<CompanyState>;\n}\n\nclass Search extends React.Component<Props> {\n  render() {\n    const { searching, companies } = this.props;\n    return (\n      <div className=\"App\">\n        <Header showSearch={true} />\n        {searching ? (\n          <Spinner />\n        ) : (\n          <CompanyList title=\"Local Results\" companies={companies} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ search }: AppState) => {\n  const { address, searching, companies } = search;\n  return { address, searching, companies };\n};\n\nexport default connect(mapStateToProps, undefined)(Search);\n","import React from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport carSide from \"@iconify/icons-fa-solid/car-side\";\nimport truckPickup from \"@iconify/icons-fa-solid/truck-pickup\";\n\ninterface Props {\n  name: string;\n  icon: string;\n  iconColor: string;\n  selected: boolean;\n  onClick: () => void;\n}\n\nconst Vehicle = ({ name, icon, iconColor, selected, onClick }: Props) => {\n  let iconImport = truckPickup;\n\n  switch (icon) {\n    case \"car\":\n      iconImport = carSide;\n      break;\n    case \"truck\":\n      iconImport = truckPickup;\n      break;\n    default:\n      iconImport = truckPickup;\n      break;\n  }\n\n  return (\n    <div\n      className={`vehicle-row ${selected ? `bg-primary` : `bg-white`}`}\n      onClick={onClick}\n      data-testid={`vehicle-${icon}`}\n    >\n      <Icon icon={iconImport} width={\"1.7em\"} color={iconColor} />\n      <span className={`vehicle-text ${selected ? `text-white` : `text-dark`}`}>\n        {name}\n      </span>\n    </div>\n  );\n};\n\nexport default Vehicle;\n","import React from \"react\";\nimport { FormGroup, Label } from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\n\ninterface Props {\n  label: string;\n  date: Date;\n  onChange: (date: Date) => void;\n}\n\nconst LabelInput = ({ label, date, onChange }: Props) => (\n  <FormGroup>\n    {label !== \"\" && <Label for=\"exampleEmail\">{label}</Label>}\n    <DatePicker\n      selected={date}\n      onChange={(date: Date) => onChange(date)}\n      className=\"form-control\"\n      withPortal={true}\n    />\n  </FormGroup>\n);\n\nexport default LabelInput;\n","import React from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport clock from \"@iconify/icons-ant-design/clock-circle-outlined\";\nimport { Button } from \"reactstrap\";\n\ninterface Props {\n  id: string;\n  name: string;\n  lines: string[];\n  price: number;\n  duration: number;\n  selected: boolean;\n  onClick: () => void;\n}\n\nconst Package = ({\n  id,\n  name,\n  price,\n  duration,\n  selected,\n  lines,\n  onClick,\n}: Props) => (\n  <div className=\"package-item border py-3\">\n    <h6>{name}</h6>\n    <h2 className=\"text-primary\">${price}</h2>\n    <div className=\"flex-center border-top border-bottom py-1 my-2\">\n      <Icon icon={clock} width={\"0.7em\"} color=\"#313436\" className=\"icon\" />\n      <span className=\"text-muted\">{duration} Min</span>\n    </div>\n    <ul>\n      {lines &&\n        lines.map((item: string, index: number) => (\n          <li key={index}>\n            <span>\n              <small>{item}</small>\n            </span>\n          </li>\n        ))}\n    </ul>\n    <div className=\"pt-2\">\n      <Button\n        color={selected === true ? \"primary\" : \"secondary\"}\n        outline={selected === false}\n        className=\"px-4\"\n        onClick={onClick}\n        data-testid={`package-${id}`}\n      >\n        Select\n      </Button>\n    </div>\n  </div>\n);\n\nexport default Package;\n","import React from \"react\";\nimport { Icon } from \"@iconify/react\";\nimport clock from \"@iconify/icons-ant-design/clock-circle-outlined\";\nimport tag from \"@iconify/icons-ant-design/tag-outlined\";\nimport { ListGroupItem, Button } from \"reactstrap\";\n\ninterface Props {\n  id: string;\n  name: string;\n  price: number;\n  duration: number;\n  selected?: boolean;\n  onClick?: () => void;\n}\n\nconst Addon = ({ id, name, price, duration, selected, onClick }: Props) => {\n  return (\n    <ListGroupItem className=\"addon-item\">\n      <span className=\"text\">\n        <small>{name}</small>\n      </span>\n      <div className=\"duration flex-center\">\n        <Icon icon={clock} width={\"0.7em\"} color=\"#313436\" className=\"icon\" />\n        <small>{duration} Min</small>\n      </div>\n      <div className=\"price flex-center\">\n        <Icon icon={tag} width={\"0.7em\"} color=\"#313436\" className=\"icon\" />\n        <small>${price}</small>\n      </div>\n      <div className=\"select flex-center\">\n        <Button\n          color={selected === true ? \"primary\" : \"secondary\"}\n          outline={selected === false}\n          className=\"px-4\"\n          onClick={onClick}\n          size=\"sm\"\n          data-testid={`addon-${id}`}\n        >\n          Select\n        </Button>\n      </div>\n    </ListGroupItem>\n  );\n};\n\nexport default Addon;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Container, Row, Col, Button, ListGroup } from \"reactstrap\";\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\nimport { AppState } from \"../redux/reducers\";\nimport {\n  setBookingDate,\n  setBookingType,\n  setBookingTotal,\n  setBookingPackage,\n  addBookingAddon,\n  removeBookingAddon,\n  resetBooking,\n} from \"../redux/actions\";\nimport { CompanyState, AddonState, PackageState } from \"../redux/types\";\nimport Header from \"../components/Header\";\nimport Vehicle from \"../components/Vehicle\";\nimport DateInput from \"../components/DateInput\";\nimport Package from \"../components/Package\";\nimport Addon from \"../components/Addon\";\nimport { companies } from \"../test/data\";\nimport defaultLogo from \"../assets/images/company-default.jpg\";\n\ntype MatchProps = {\n  id: string;\n};\n\ninterface Props extends RouteComponentProps<MatchProps> {\n  address: string;\n  bookingDate: Date;\n  bookingType: string;\n  bookingPackage: PackageState;\n  bookingAddons: Array<AddonState>;\n  bookingAddonIDs: string[];\n  bookingPrice: number;\n  bookingDuration: number;\n  setBookingDate: typeof setBookingDate;\n  setBookingType: typeof setBookingType;\n  setBookingTotal: typeof setBookingTotal;\n  setBookingPackage: typeof setBookingPackage;\n  addBookingAddon: typeof addBookingAddon;\n  removeBookingAddon: typeof removeBookingAddon;\n  resetBooking: typeof resetBooking;\n}\n\nclass Company extends React.Component<Props, CompanyState> {\n  readonly state: CompanyState = {\n    id: \"\",\n    name: \"\",\n    street: \"\",\n    city: \"\",\n    state: \"\",\n    zip: \"\",\n    country: \"\",\n    phone: \"\",\n    email: \"\",\n    desc: \"\",\n    packages: [],\n    addons: [],\n  };\n\n  componentDidMount() {\n    const { match, resetBooking } = this.props;\n    const id = match.params.id;\n\n    if (id) {\n      resetBooking();\n      this.loadCompany(id);\n    }\n  }\n\n  loadCompany = (id: string) => {\n    const data = companies.filter(\n      (company: CompanyState) => company.id === id\n    )[0];\n\n    if (data) {\n      const { name, desc, packages, addons } = data;\n      this.setState({ id, name, desc, packages, addons });\n      return true;\n    }\n  };\n\n  selectBookingDate = (bookingDate: Date) => {\n    const { setBookingDate } = this.props;\n    setBookingDate(bookingDate);\n  };\n\n  selectBookingType = (bookingType: string) => {\n    const { setBookingType } = this.props;\n    setBookingType(bookingType);\n  };\n\n  selectBookingPackage = (bookingPackage: PackageState) => {\n    const { setBookingPackage } = this.props;\n    setBookingPackage(bookingPackage);\n  };\n\n  selectBookingAddon = (bookingAddon: AddonState) => {\n    const { id } = bookingAddon;\n    const { addBookingAddon, removeBookingAddon, bookingAddonIDs } = this.props;\n\n    if (bookingAddonIDs.includes(id)) {\n      removeBookingAddon(bookingAddon);\n      return;\n    }\n    addBookingAddon(bookingAddon);\n  };\n\n  calcTotals = () => {\n    const { setBookingTotal, bookingPackage, bookingAddons } = this.props;\n\n    let totalPrice = 0;\n    let totalDuration = 0;\n\n    if (bookingPackage.price > 0) {\n      totalPrice += bookingPackage.price;\n      totalDuration += bookingPackage.duration;\n    }\n    for (let i = 0; i < bookingAddons.length; i++) {\n      totalPrice += bookingAddons[i].price;\n      totalDuration += bookingAddons[i].duration;\n    }\n\n    const price = parseFloat(totalPrice.toFixed(2));\n    const duration = totalDuration;\n\n    setBookingTotal({ price, duration });\n  };\n\n  componentDidUpdate = (prevProps: Props) => {\n    const { bookingPackage, bookingAddonIDs } = this.props;\n\n    if (prevProps.bookingPackage !== bookingPackage) {\n      this.calcTotals();\n    } else if (prevProps.bookingAddonIDs !== bookingAddonIDs) {\n      this.calcTotals();\n    }\n  };\n\n  render() {\n    const { name, desc, packages, addons } = this.state;\n\n    const {\n      bookingDate,\n      bookingType,\n      bookingPackage,\n      bookingAddonIDs,\n      bookingPrice,\n      bookingDuration,\n    } = this.props;\n\n    return (\n      <div className=\"App\">\n        <Header showSearch={false} />\n        <Container>\n          <Row className=\"mt-2 mb-2\">\n            <Col>\n              <img src={defaultLogo} className=\"company-banner\" alt={name} />\n            </Col>\n          </Row>\n          <Row>\n            <Col sm=\"12\" xl=\"7\">\n              <Row>\n                <Col>\n                  <h2>{name}</h2>\n                </Col>\n              </Row>\n              <Row>\n                <Col>\n                  <p>{desc}</p>\n                </Col>\n              </Row>\n            </Col>\n            <Col sm=\"12\" xl=\"5\">\n              <Row>\n                <Col>\n                  <div className=\"booking-container border p-3\">\n                    <div className=\"pb-1\">\n                      <h6>When do you want your car washed?</h6>\n                      <Row>\n                        <Col sm=\"12\" lg=\"12\">\n                          <DateInput\n                            label=\"\"\n                            date={bookingDate}\n                            onChange={this.selectBookingDate}\n                          />\n                        </Col>\n                      </Row>\n                    </div>\n                    <div className=\"pb-2\">\n                      <h6>What kind of car do you drive?</h6>\n                      <Row>\n                        <Col sm=\"12\" lg=\"6\" className=\"pb-2\">\n                          <Vehicle\n                            name=\"Car\"\n                            icon=\"car\"\n                            iconColor=\"#154379\"\n                            selected={bookingType === \"Car\"}\n                            onClick={() => this.selectBookingType(\"Car\")}\n                          />\n                        </Col>\n                        <Col sm=\"12\" lg=\"6\">\n                          <Vehicle\n                            name=\"Truck\"\n                            icon=\"truck\"\n                            iconColor=\"#ef412d\"\n                            selected={bookingType === \"Truck\"}\n                            onClick={() => this.selectBookingType(\"Truck\")}\n                          />\n                        </Col>\n                      </Row>\n                    </div>\n                    <div className=\"pb-2\">\n                      <h6>Select Package</h6>\n                      <Row>\n                        {packages.map((item: PackageState, index: number) => (\n                          <React.Fragment>\n                            {index % 2 === 0 && index !== 0 && (\n                              <div className=\"w-100\"></div>\n                            )}\n                            <Col key={index} sm=\"12\" md=\"6\" className=\"pb-2\">\n                              <Package\n                                id={item.id}\n                                name={item.name}\n                                price={item.price}\n                                duration={item.duration}\n                                lines={item.lines}\n                                selected={bookingPackage.id === item.id}\n                                onClick={() => this.selectBookingPackage(item)}\n                              />\n                            </Col>\n                          </React.Fragment>\n                        ))}\n                      </Row>\n                    </div>\n                    <div className=\"pb-3\">\n                      <h6>Select Addons (Optional)</h6>\n                      <ListGroup className=\"addon-container\">\n                        {addons &&\n                          addons.map((item: AddonState, index: number) => (\n                            <Addon\n                              id={item.id}\n                              name={item.name}\n                              price={item.price}\n                              duration={item.duration}\n                              selected={bookingAddonIDs.includes(item.id)}\n                              onClick={() => this.selectBookingAddon(item)}\n                            />\n                          ))}\n                      </ListGroup>\n                    </div>\n                    <div className=\"pb-2\">\n                      <h6>Payment Details</h6>\n                      <span className=\"d-block\">\n                        Total Time: {bookingDuration} Mins\n                      </span>\n                      <span className=\"d-block\">\n                        Total Price: ${bookingPrice}\n                      </span>\n                    </div>\n                    <Button color=\"primary\" size=\"lg\" block>\n                      Book Your Wash\n                    </Button>\n                  </div>\n                  <br />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ search, booking }: AppState) => {\n  const { address } = search;\n  const {\n    bookingDate,\n    bookingType,\n    bookingPackage,\n    bookingAddons,\n    bookingAddonIDs,\n    bookingPrice,\n    bookingDuration,\n  } = booking;\n  return {\n    address,\n    bookingDate,\n    bookingType,\n    bookingPackage,\n    bookingAddons,\n    bookingAddonIDs,\n    bookingPrice,\n    bookingDuration,\n  };\n};\n\nconst mapDispatchToProps = {\n  setBookingDate,\n  setBookingType,\n  setBookingTotal,\n  setBookingPackage,\n  addBookingAddon,\n  removeBookingAddon,\n  resetBooking,\n};\n\nconst ConnectedComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Company);\n\nexport default withRouter(ConnectedComponent);\n","import {\n  SET_BOOKING_DATE,\n  SET_BOOKING_TYPE,\n  SET_BOOKING_TOTAL,\n  SET_BOOKING_PACKAGE,\n  ADD_BOOKING_ADDON,\n  REMOVE_BOOKING_ADDON,\n  RESET_BOOKING,\n  AddonState,\n  PackageState,\n} from \"../types\";\n\nexport const setBookingDate = (payload: Date) => {\n  return {\n    type: SET_BOOKING_DATE,\n    payload,\n  };\n};\n\nexport const setBookingType = (payload: string) => {\n  return {\n    type: SET_BOOKING_TYPE,\n    payload,\n  };\n};\n\nexport const setBookingTotal = (payload: object) => {\n  return {\n    type: SET_BOOKING_TOTAL,\n    payload,\n  };\n};\n\nexport const setBookingPackage = (payload: PackageState) => {\n  return {\n    type: SET_BOOKING_PACKAGE,\n    payload,\n  };\n};\n\nexport const addBookingAddon = (payload: AddonState) => {\n  return {\n    type: ADD_BOOKING_ADDON,\n    payload,\n  };\n};\n\nexport const removeBookingAddon = (payload: AddonState) => {\n  return {\n    type: REMOVE_BOOKING_ADDON,\n    payload,\n  };\n};\n\nexport const resetBooking = () => {\n  return {\n    type: RESET_BOOKING,\n  };\n};\n","import React from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Landing from \"./scenes/Landing\";\nimport Search from \"./scenes/Search\";\nimport Company from \"./scenes/Company\";\n\ninterface Props {}\n\nexport default class Router extends React.Component<Props> {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"/company/:id\" component={Company} />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport Router from \"./Router\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./assets/css/App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <Router />\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./assets/css/App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/company-default.92886368.jpg\";","export const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport interface AuthState {\n  id: string;\n  username: string;\n  token: string;\n  loggedIn: boolean;\n}\n\ninterface LoginSuccessAction {\n  type: typeof LOGIN_SUCCESS;\n  payload: AuthState;\n}\n\nexport interface LogoutAction {\n  type: typeof LOGOUT;\n}\n\nexport type AuthActionTypes = LoginSuccessAction | LogoutAction;\n","import { CompanyState } from \"../types\";\nexport const SEARCH_SET = \"SEARCH_SET\";\nexport const SEARCH_START = \"SEARCH_START\";\nexport const SEARCH_FAIL = \"SEARCH_FAIL\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\n\nexport interface SearchState {\n  searching: boolean;\n  address: string;\n  companies: Array<CompanyState>;\n}\n\ninterface SearchSetAction {\n  type: typeof SEARCH_SET;\n  payload: string;\n}\n\ninterface SearchStartAction {\n  type: typeof SEARCH_START;\n  payload: string;\n}\n\ninterface SearchFailAction {\n  type: typeof SEARCH_FAIL;\n  payload: string;\n}\n\ninterface SearchSuccessAction {\n  type: typeof SEARCH_SUCCESS;\n  payload: SearchState;\n}\n\nexport type SearchActionTypes =\n  | SearchSetAction\n  | SearchStartAction\n  | SearchFailAction\n  | SearchSuccessAction;\n","import { PackageState, AddonState } from \"../types\";\nexport const SET_BOOKING_DATE = \"SET_BOOKING_DATE\";\nexport const SET_BOOKING_TYPE = \"SET_BOOKING_TYPE\";\nexport const SET_BOOKING_TOTAL = \"SET_BOOKING_TOTAL\";\nexport const SET_BOOKING_PACKAGE = \"SET_BOOKING_PACKAGE\";\nexport const ADD_BOOKING_ADDON = \"ADD_BOOKING_ADDON\";\nexport const REMOVE_BOOKING_ADDON = \"REMOVE_BOOKING_ADDON\";\nexport const RESET_BOOKING = \"RESET_BOOKING\";\n\nexport interface BookingState {\n  bookingDate: Date;\n  bookingType: string;\n  bookingPackage: PackageState;\n  bookingAddons: Array<AddonState>;\n  bookingAddonIDs: string[];\n  bookingPrice: number;\n  bookingDuration: number;\n}\n\ninterface SetBookingDateAction {\n  type: typeof SET_BOOKING_DATE;\n  payload: Date;\n}\n\ninterface SetBookingTypeAction {\n  type: typeof SET_BOOKING_TYPE;\n  payload: string;\n}\n\ninterface SetBookingTotalAction {\n  type: typeof SET_BOOKING_TOTAL;\n  payload: { price: number; duration: number };\n}\n\ninterface SetBookingPackageAction {\n  type: typeof SET_BOOKING_PACKAGE;\n  payload: PackageState;\n}\n\ninterface AddBookingAddonAction {\n  type: typeof ADD_BOOKING_ADDON;\n  payload: AddonState;\n}\n\ninterface RemoveBookingAddonAction {\n  type: typeof REMOVE_BOOKING_ADDON;\n  payload: AddonState;\n}\n\ninterface ResetBookingAction {\n  type: typeof RESET_BOOKING;\n}\n\nexport type BookingActionTypes =\n  | SetBookingDateAction\n  | SetBookingTypeAction\n  | SetBookingTotalAction\n  | SetBookingPackageAction\n  | AddBookingAddonAction\n  | RemoveBookingAddonAction\n  | ResetBookingAction;\n","export * from \"./authTypes\";\nexport * from \"./searchTypes\";\nexport * from \"./companyTypes\";\nexport * from \"./bookingTypes\";\n"],"sourceRoot":""}